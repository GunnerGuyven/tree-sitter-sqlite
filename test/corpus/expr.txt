================================================================================
expr
================================================================================

-- signed-number
SELECT 0, +0, -0;
SELECT 1, +1, -1;
SELECT 2, +2, -2;
SELECT 1.4, +1.4, -1.4;
SELECT 1.5e+5, +1.5e+5, -1.5e+5;
SELECT 0.0001, +0.0001, -0.0001;

-- literal-value
SELECT 123;
SELECT 123.4e05;
SELECT 'abcde';
SELECT X'414243';
SELECT NULL;
SELECT CURRENT_TIME;
SELECT CURRENT_DATE;
SELECT CURRENT_TIMESTAMP;

-- parameter
SELECT ?;
SELECT ?123;
SELECT @hello;
SELECT :world;
SELECT $tcl;
--SELECT $tcl(array);

-- function
SELECT changes();
SELECT count(*);
SELECT count(DISTINCT "a");
--SELECT substr('abc', 10, 20);

-- raise-function
SELECT RAISE(IGNORE);
SELECT RAISE(ROLLBACK, 'error message');
SELECT RAISE(ABORT, 'error message');
SELECT RAISE(FAIL, 'error message');

-- table
SELECT cname;
SELECT tblname.cname;
SELECT dbname.tblname.cname;

-- unary
SELECT +1;
SELECT -2;
SELECT NOT 3;
SELECT ~4;

-- binary
SELECT 'hello' || 'world';
SELECT 1 * 2;
SELECT 1 / 2;
SELECT 1 % 2;
SELECT 1 + 2;
SELECT 1 - 2;
SELECT 1 << 2;
SELECT 1 >> 2;
SELECT 1 & 2;
SELECT 1 | 2;
SELECT 1 < 2;
SELECT 1 <= 2;
SELECT 1 > 2;
SELECT 1 >= 2;
SELECT 1 = 2;
SELECT 1 == 2;
SELECT 1 != 2;
SELECT 1 <> 2;
SELECT 1 IS 2;
SELECT 1 IS NOT 2;
SELECT 1 AND 2;
SELECT 1 OR 2;

-- parenthesis
SELECT ( 1 );

-- cast
SELECT CAST ( '123' AS integer );
SELECT CAST ( '123' AS 'abcd' );
SELECT CAST ( '123' AS 'ab$ $cd' );

-- collate
SELECT 'hello' COLLATE nocase;
SELECT 'hello' COLLATE binary;

-- like
SELECT 'abc' LIKE 'abcd';
SELECT 'abc' LIKE 'abcd' ESCAPE '%';
SELECT 'abc' GLOB 'abcd';
SELECT 'abc' GLOB 'abcd' ESCAPE '%';
SELECT 'abc' REGEXP 'abcd';
SELECT 'abc' REGEXP 'abcd' ESCAPE '%';
SELECT 'abc' MATCH 'abcd';
SELECT 'abc' MATCH 'abcd' ESCAPE '%';
SELECT 'abc' NOT LIKE 'abcd';
SELECT 'abc' NOT LIKE 'abcd' ESCAPE '%';
SELECT 'abc' NOT GLOB 'abcd';
SELECT 'abc' NOT GLOB 'abcd' ESCAPE '%';
SELECT 'abc' NOT REGEXP 'abcd';
SELECT 'abc' NOT REGEXP 'abcd' ESCAPE '%';
SELECT 'abc' NOT MATCH 'abcd';
SELECT 'abc' NOT MATCH 'abcd' ESCAPE '%';

-- null
SELECT 1 ISNULL;
SELECT 1 NOTNULL;
SELECT 1 NOT NULL;

-- is
SELECT 1 IS 2;
SELECT 1 IS NOT 2;

-- between
SELECT 2 NOT BETWEEN 1 AND 3;
SELECT 2 BETWEEN 1 AND 3;

-- in
SELECT 1 IN (SELECT cname FROM tblname);
SELECT 1 IN (1);
SELECT 1 IN (1, 2, 3);
SELECT 1 IN tblname;
SELECT 1 IN dbname.tblname;
SELECT 1 NOT IN (SELECT cname FROM tblname);
SELECT 1 NOT IN (1);
SELECT 1 NOT IN (1, 2, 3);
SELECT 1 NOT IN tblname;
SELECT 1 NOT IN dbname.tblname;

-- exists
SELECT EXISTS (SELECT cname FROM tblname);
SELECT NOT EXISTS (SELECT cname FROM tblname);

-- case
SELECT CASE 'abc' WHEN 1 THEN 'true' ELSE 'false' END;
SELECT CASE 'abc' WHEN 1 THEN 'true' END;
SELECT CASE 'abc' WHEN 1 THEN 'true' WHEN 2 THEN 'false' ELSE 'fallback' END;
SELECT CASE 'abc' WHEN 1 THEN 'true' WHEN 2 THEN 'false' END;
SELECT CASE WHEN 0 THEN 'true' ELSE 'false' END;
SELECT CASE WHEN 0 THEN 'true' END;
SELECT CASE WHEN 0 THEN 'true' WHEN 1 THEN 'false' ELSE 'fallback' END;
SELECT CASE WHEN 0 THEN 'true' WHEN 1 THEN 'false' END;

--------------------------------------------------------------------------------

(sql_stmt_list
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (blob_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (NULL)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CURRENT_TIME)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CURRENT_DATE)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CURRENT_TIMESTAMP)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (bind_parameter)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (bind_parameter)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (bind_parameter)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (bind_parameter)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (bind_parameter)))
  (comment)
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (function_name
        (identifier))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (function_name
        (identifier))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (function_name
        (identifier))
      (DISTINCT)
      (identifier)))
  (comment)
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (raise_function
        (RAISE)
        (IGNORE))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (raise_function
        (RAISE)
        (ROLLBACK)
        (error_message
          (string_literal)))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (raise_function
        (RAISE)
        (ABORT)
        (error_message
          (string_literal)))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (raise_function
        (RAISE)
        (FAIL)
        (error_message
          (string_literal)))))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (identifier)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (identifier)
      (identifier)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (identifier)
      (identifier)
      (identifier)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (NOT)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IS)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IS)
      (NOT)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (AND)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (OR)
      (numeric_literal)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (CAST)
      (string_literal)
      (AS)
      (type_name
        (identifier))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CAST)
      (string_literal)
      (AS)
      (type_name
        (string_literal))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CAST)
      (string_literal)
      (AS)
      (type_name
        (string_literal))))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (COLLATE)
      (collation_name
        (identifier))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (COLLATE)
      (collation_name
        (identifier))))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (LIKE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (LIKE)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (GLOB)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (GLOB)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (REGEXP)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (REGEXP)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (MATCH)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (MATCH)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (LIKE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (LIKE)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (GLOB)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (GLOB)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (REGEXP)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (REGEXP)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (MATCH)
      (string_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (string_literal)
      (NOT)
      (MATCH)
      (string_literal)
      (ESCAPE)
      (string_literal)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (ISNULL)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOTNULL)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOT)
      (NULL)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IS)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IS)
      (NOT)
      (numeric_literal)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOT)
      (BETWEEN)
      (numeric_literal)
      (AND)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (BETWEEN)
      (numeric_literal)
      (AND)
      (numeric_literal)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IN)
      (select_stmt
        (SELECT)
        (identifier)
        (from_clause
          (FROM)
          (table_or_subquery
            (identifier))))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IN)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IN)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IN)
      (identifier)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (IN)
      (identifier)
      (identifier)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOT)
      (IN)
      (select_stmt
        (SELECT)
        (identifier)
        (from_clause
          (FROM)
          (table_or_subquery
            (identifier))))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOT)
      (IN)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOT)
      (IN)
      (numeric_literal)
      (numeric_literal)
      (numeric_literal)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOT)
      (IN)
      (identifier)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (numeric_literal)
      (NOT)
      (IN)
      (identifier)
      (identifier)))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (EXISTS)
      (select_stmt
        (SELECT)
        (identifier)
        (from_clause
          (FROM)
          (table_or_subquery
            (identifier))))))
  (sql_stmt
    (select_stmt
      (SELECT)
      (NOT)
      (EXISTS)
      (select_stmt
        (SELECT)
        (identifier)
        (from_clause
          (FROM)
          (table_or_subquery
            (identifier))))))
  (comment)
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (ELSE)
      (string_literal)
      (END)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (END)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (ELSE)
      (string_literal)
      (END)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (END)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (ELSE)
      (string_literal)
      (END)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (END)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (ELSE)
      (string_literal)
      (END)))
  (sql_stmt
    (select_stmt
      (SELECT)
      (CASE)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (WHEN)
      (numeric_literal)
      (THEN)
      (string_literal)
      (END))))
